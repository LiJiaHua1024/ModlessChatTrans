# Copyright (C) 2024 LiJiaHua1024## This program is free software: you can redistribute it and/or modify# it under the terms of the GNU General Public License as published by# the Free Software Foundation, either version 3 of the License, or# (at your option) any later version.## This program is distributed in the hope that it will be useful,# but WITHOUT ANY WARRANTY; without even the implied warranty of# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the# GNU General Public License for more details.## You should have received a copy of the GNU General Public License# along with this program.  If not, see <https://www.gnu.org/licenses/>.import threadingfrom modless_chat_trans.display import initialization, display_messagefrom modless_chat_trans.log_monitor import monitor_log_filefrom modless_chat_trans.process_message import process_messagefrom modless_chat_trans.translator import Translatorfrom modless_chat_trans.file_utils import read_configfrom modless_chat_trans.interface import create_main_window, ProgramInfo"""Currently, it can translate messages sent by other players into various languages, significantly saving time. However, it does not yet support translating one's own sent messages, which is the next issue to be addressed.Next, I will develop this program in the following areas:- Supporting the translation of one's own sent messages before sending- Supporting more display methods- Supporting more translation services- ..."""program_info = ProgramInfo(version="v2.0.0-beta.1",                           author="LiJiaHua1024",                           email="minecraft_benli@163.com",                           github="https://github.com/LiJiaHua1024/ModlessChatTrans",                           license=("GNU General Public License v3.0", "https://www.gnu.org/licenses/gpl-3.0.html"))def start_translation():    config = read_config()    def callback(line):        if processed_message := process_message(line, translator, model=config.model,                                                source_language=config.source_language,                                                target_language=config.target_language):            display_message(processed_message, config.output_method)        # else:            # retry    translator = Translator(api_key=config.api_key, api_url=config.api_url)    initialization(config.output_method, http_port=config.http_port)    monitor_thread = threading.Thread(target=monitor_log_file, args=(config.minecraft_log_folder, callback))    monitor_thread.daemon = True    monitor_thread.start()create_main_window(program_info, start_translation)