name: Windows Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number'
        required: true
        default: '2.0.0'
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install nuitka

    - name: Determine version
      id: determine_version
      run: |
        if ("${{ github.event_name }}" -eq "workflow_dispatch") {
            $version = "${{ github.event.inputs.version }}"
        } else {
            $version = "${{ github.ref_name }}"
            if ($version -match "^v") {
              $version = $version.Substring(1)
            }
        }
        echo "version=$version" >> $env:GITHUB_OUTPUT
      shell: pwsh

    - name: Build with Nuitka
      shell: pwsh
      run: |
        $version = "${{ steps.determine_version.outputs.version }}"

        $commonArgs = @(
          '--onefile'
          '--onefile-no-dll'
          '--standalone'
          '--msvc=latest'
          '--lto=yes'
          '--noinclude-pytest-mode=nofollow'
          '--windows-icon-from-ico=icon.ico'
          '--enable-plugin=tk-inter'
          '--include-module=dbm.dumb'
          '--include-package=urllib3'
          '--include-package-data=langdetect'
          '--include-data-dir=locales=./locales'
          '--include-data-dir=templates=./templates'
          '--include-data-file=choose_language.png=./choose_language.png'
          '--output-filename=ModlessChatTrans'
          '--file-description=ModlessChatTrans'
          '--product-name=ModlessChatTrans'
          '--copyright=Copyright Â© 2024-2025 LiJiaHua1024'
          '--assume-yes-for-downloads'
        )

        if ($version -like "*debug*") {
          $buildArgs = $commonArgs + @(
            '--file-version=0.0.0.0'
            '--product-version=0.0.0.0'
          )
        }
        else {
          $buildArgs = $commonArgs + @(
            "--file-version=$version"
            "--product-version=$version"
            '--windows-console-mode=disable'
          )
        }
    
        & nuitka @buildArgs main.py

    - name: Rename executable
      run: |
        $version = "${{ steps.determine_version.outputs.version }}"
        ren ModlessChatTrans.exe ModlessChatTrans_v$version.exe
      shell: pwsh

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ModlessChatTrans
        path: ./ModlessChatTrans_v${{ steps.determine_version.outputs.version }}.exe